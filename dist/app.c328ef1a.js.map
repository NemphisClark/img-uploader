{"version":3,"sources":["upload.js","app.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","element","tag","classes","content","node","document","createElement","length","classList","add","textContent","noop","upload","selector","options","files","onUpload","input","querySelector","preview","openBtn","uploadBtn","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHandler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","e","imgSource","result","insertAdjacentHTML","name","size","readAsDataURL","removeHandler","dataset","filter","block","closest","setTimeout","remove","clearPreview","el","bottom","uploadHandler","querySelectorAll","previewInfo","addEventListener","console"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes) {\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n  if (!bytes) {\r\n    return '0 Byte'\r\n  }\r\n  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\r\n  return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i]\r\n}\r\n\r\nconst element = (tag, classes = [], content) => {\r\n  const node = document.createElement(tag)\r\n\r\n  if (classes.length) {\r\n    node.classList.add(...classes)\r\n  }\r\n\r\n  if (content) {\r\n    node.textContent = content\r\n  }\r\n\r\n  return node\r\n}\r\n\r\nconst noop = function () {}\r\n\r\nexport function upload(selector, options = {}) {\r\n  let files = []\r\n  const onUpload = options.onUpload ?? noop\r\n  const input = document.querySelector(selector)\r\n  const preview = element('div', ['preview'])\r\n  const openBtn = element('button', ['btn'], 'Открыть')\r\n  const uploadBtn = element('button', ['btn', 'primary'], 'Загрузить')\r\n\r\n  uploadBtn.style.display = 'none'\r\n\r\n  if (options.multi) {\r\n    input.setAttribute('multiple', true)\r\n  }\r\n\r\n  if (options.accept && Array.isArray(options.accept)) {\r\n    input.setAttribute('accept', options.accept.join(','))\r\n  }\r\n\r\n  input.insertAdjacentElement('afterend', preview)\r\n  input.insertAdjacentElement('afterend', uploadBtn)\r\n  input.insertAdjacentElement('afterend', openBtn)\r\n\r\n  const triggerInput = () => input.click()\r\n\r\n  const changeHandler = (event) => {\r\n    if (!event.target.files.length) {\r\n      return\r\n    }\r\n\r\n    files = Array.from(event.target.files)\r\n    preview.innerHTML = ''\r\n\r\n    uploadBtn.style.display = 'inline'\r\n\r\n    files.forEach((file) => {\r\n      if (!file.type.match('image')) {\r\n        return\r\n      }\r\n\r\n      const reader = new FileReader()\r\n\r\n      reader.onload = (e) => {\r\n        const imgSource = e.target.result\r\n\r\n        preview.insertAdjacentHTML(\r\n          'afterbegin',\r\n          `\r\n            <div class=\"preview-image\">\r\n              <div class=\"preview-remove\" data-name=\"${file.name}\">&times;</div>\r\n              <img src=\"${imgSource}\" alt=\"${file.name}\" />\r\n              <div class=\"preview-info\">\r\n                <span>${file.name}</span>\r\n                ${bytesToSize(file.size)}\r\n              </div>\r\n            </div>\r\n          `\r\n        )\r\n      }\r\n\r\n      reader.readAsDataURL(file)\r\n    })\r\n  }\r\n\r\n  const removeHandler = (event) => {\r\n    if (!event.target.dataset.name) {\r\n      return\r\n    }\r\n\r\n    const { name } = event.target.dataset\r\n    files = files.filter((file) => file.name !== name)\r\n\r\n    if (!files.length) {\r\n      uploadBtn.style.display = 'none'\r\n    }\r\n\r\n    const block = preview\r\n      .querySelector(`[data-name=\"${name}\"]`)\r\n      .closest('.preview-image')\r\n\r\n    block.classList.add('removing')\r\n    setTimeout(() => {\r\n      block.remove()\r\n    }, 300)\r\n  }\r\n\r\n  const clearPreview = (el) => {\r\n    el.style.bottom = '4px'\r\n    el.innerHTML = '<div class=\"preview-info__progress\"></div>'\r\n  }\r\n\r\n  const uploadHandler = () => {\r\n    preview.querySelectorAll('.preview-remove').forEach((e) => e.remove())\r\n    const previewInfo = preview.querySelectorAll('.preview-info')\r\n    previewInfo.forEach(clearPreview)\r\n    onUpload(files)\r\n  }\r\n\r\n  openBtn.addEventListener('click', triggerInput)\r\n  input.addEventListener('change', changeHandler)\r\n  preview.addEventListener('click', removeHandler)\r\n  uploadBtn.addEventListener('click', uploadHandler)\r\n}\r\n","import { upload } from './upload.js'\r\n\r\nupload('#file', {\r\n  multi: true,\r\n  accept: ['.png', '.jpg', '/.jpeg', '.gif'],\r\n  onUpload(files) {\r\n    console.log('Files: ', files)\r\n  },\r\n})\r\n"]}